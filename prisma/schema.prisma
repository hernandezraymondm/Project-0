generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  SUPERADMIN
  USER
  GUEST
  MODERATOR
  EDITOR
  VIEWER
  CONTRIBUTOR
  MANAGER
  DEVELOPER
  SUPPORT
  ANALYST
  AUDITOR
  VENDOR
  CUSTOMER
  STUDENT
  TEACHER
}

model User {
  id               String    @id @default(cuid())
  name             String
  email            String    @unique
  emailVerified    DateTime? @map("email_verified")
  image            String?
  password         String?
  role             UserRole  @default(USER)
  twoFactorSecret  String?
  twoFactorEnabled Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Session    Session[]
  AuditTrail AuditTrail[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  refreshToken String   @unique
  userAgent    String
  ipAddress    String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model AuditTrail {
  id        String   @id @default(cuid())
  userId    String
  email     String?
  action    String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, action])
  @@map("audit_trail")
}

model Verification {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  code    String   @map("verification_code")
  expires DateTime

  @@unique([email, token])
  @@map("verification")
}

model PasswordReset {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  code    String   @map("reset_code")
  expires DateTime

  @@unique([email, token])
  @@map("password_reset")
}
